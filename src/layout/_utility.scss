$positions: ('sticky', 'relative', 'static', 'absolute', 'fixed', 'none');

@each $position in $positions {
	.#{$position} {
		position: #{$position};
	}
}

.absolute,
.fixed,
.sticky {
	z-index: 9;
}


// z-index classes. These cannot
// surpass _some_ Jupiter component
// defaults.
$indexes: '-1' '1' '2' '3' '4' '5' '6' '7' '8' '9' '10' '99' '999' '9999';

@each $index in $indexes {
	.z-#{$index} {
		z-index: #{$index};
	}
}

// Used for <code> elements
.j-code {
	width: 100%;
	max-width: 37.5rem;
	overflow-x: scroll;
}

// Overflow classes.
$overflow-values: ('overflow', 'overflow-x', 'overflow-y');
$overflows: ('auto', 'hidden', 'visible', 'scroll');

@each $value in $overflow-values {
	@each $overflow in $overflows {
		.#{$value}-#{$overflow} {
			#{$value}: #{$overflow} !important;
		}
	}
}

// Visually and mechanically hides an element
.hide {
	display: none !important;
	pointer-events: none !important;
	visibility: hidden !important;
	opacity: 0 !important;
}

// Used for position values.
// e.g. top-8 is top: 8px;
$orientations: 'top' 'right' 'bottom' 'left';
$positions: '0' '4' '8' '12' '16' '20' '30' '40' '50' '80' '100';
$positions_percentage: '1' '2' '4' '5' '6' '8' '10' '12' '14' '16' '20' '30' '40' '45' '50' '55' '60' '70' '80' '90' '100';

@each $orientation in $orientations {
	@each $val in $positions {
		.#{$orientation}-#{$val} {
			#{$orientation}: #{$val}#{'px'};
		}
	}
}


// Negative values
@each $orientation in $orientations {
	@each $val in $positions {
		.#{$orientation}--#{$val} {
			#{$orientation}: #{"-"}#{$val}#{'px'};
		}
	}
}

@each $orientation in $orientations {
	@each $val in $positions_percentage {
		.#{$orientation}-#{$val}p {
			#{$orientation}: #{$val}#{'%'};
		}
	}
}

// Negative values
@each $orientation in $orientations {
	@each $val in $positions_percentage {
		.#{$orientation}--#{$val}p {
			#{$orientation}: #{"-"}#{$val}#{'%'};
		}
	}
}

// Every 15 degrees up to 360
@for $i from 1 through 24 {
	.rotate-#{$i * 15} {
		transform: rotate(#{$i * 15}#{'deg'});
	}
}

$scales: (
	'0-9' '0.9',
	'0-92' '0.92',
	'0-94' '0.94',
	'0-96' '0.96',
	'0-98' '0.98',
	'1' '1',
	'1-1' '1.1',
	'1-2' '1.2',
	'1-3' '1.3',
	'1-4' '1.4',
	'1-5' '1.5'
);

@each $tup in $scales {
	.scale-#{nth($tup, 1)} {
		transform: scale(#{nth($tup, 2)});
	}
}

@media only screen and (max-width: 991px) {
	.tablet-hide {
		display: none !important;
		pointer-events: none !important;
		visibility: hidden !important;
		opacity: 0 !important;
	}
	.tablet-nohide {
		display: flex !important;
		pointer-events: auto !important;
		visibility: visible !important;
		opacity: 1 !important;
	}
	@each $position in $positions {
		.tablet-#{$position} {
			position: #{$position};
		}
	}

	@each $orientation in $orientations {
		@each $val in $positions {
			.tablet-#{$orientation}-#{$val} {
				#{$orientation}: #{$val}#{'px'};
			}
		}
	}

	@each $orientation in $orientations {
		@each $val in $positions_percentage {
			.tablet-#{$orientation}-#{$val}p {
				#{$orientation}: #{$val}#{'%'};
			}
		}
	}
}
@media only screen and (max-width: 767px) {
	.landscape-hide {
		display: none !important;
		pointer-events: none !important;
		visibility: hidden !important;
		opacity: 0 !important;
	}
	.landscape-nohide {
		display: flex !important;
		pointer-events: auto !important;
		visibility: visible !important;
		opacity: 1 !important;
	}
	@each $position in $positions {
		.landscape-#{$position} {
			position: #{$position};
		}
	}

	@each $orientation in $orientations {
		@each $val in $positions {
			.landscape-#{$orientation}-#{$val} {
				#{$orientation}: #{$val}#{'px'};
			}
		}
	}

	@each $orientation in $orientations {
		@each $val in $positions_percentage {
			.landscape-#{$orientation}-#{$val}p {
				#{$orientation}: #{$val}#{'%'};
			}
		}
	}
}
@media only screen and (max-width: 478px) {
	.portrait-hide {
		display: none !important;
		pointer-events: none !important;
		visibility: hidden !important;
		opacity: 0 !important;
	}
	.portrait-nohide {
		display: flex !important;
		pointer-events: auto !important;
		visibility: visible !important;
		opacity: 1 !important;
	}
	@each $position in $positions {
		.portrait-#{$position} {
			position: #{$position};
		}
	}

	@each $orientation in $orientations {
		@each $val in $positions {
			.portrait-#{$orientation}-#{$val} {
				#{$orientation}: #{$val}#{'px'};
			}
		}
	}

	@each $orientation in $orientations {
		@each $val in $positions_percentage {
			.portrait-#{$orientation}-#{$val}p {
				#{$orientation}: #{$val}#{'%'};
			}
		}
	}
}
