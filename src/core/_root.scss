@use '../variables';

@function str-replace($string, $search, $replace: '') {
	$index: str-index($string, $search);

	@if $index {
		@return str-slice($string, 1, $index - 1) + $replace +
			str-replace(
				str-slice($string, $index + str-length($search)),
				$search,
				$replace
			);
	}

	@return $string;
}

// Normal head
html,
body {
	font-family: variables.$font-stack;
	font-size: 1rem;
	font-weight: 400;
	background: var(--ui);
	color: var(--text-color);
}

@each $shade in variables.$shades {
	body.#{$shade} {
		@each $weight in variables.$color-weights {
			--ui-#{str-replace($weight, '0', '')}: var(--#{$shade}-#{$weight});
		}
	}
}

@each $color in variables.$interactive-colors {
	body.#{$color} {
		--accent: var(--#{$color}-60);
		--accent-hover: var(--#{$color}-70);

		@each $weight in variables.$color-weights {
			--accent-#{$weight}: var(--#{$color}-#{$weight}) !important;
		}
	}
}

@supports (scroll-behavior: smooth) {
	html {
		scroll-behavior: smooth;
	}
}

// Jupiter head
#root,
#app {
	max-width: 100vw;
}
#root {
	justify-content: center;
	align-items: center;
	flex-direction: column;
	position: relative;
}
#app.app,
#app.app #root {
	max-width: 100vw;
	overflow-x: hidden;
	overflow: hidden;
	max-height: 100vh;
}

body {
	overflow-y: scroll;
	min-height: 100vh;
}

// So that you know if your values are unexpected
.null,
.undefined {
	background-color: var(--red-60);
}
